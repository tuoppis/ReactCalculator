{"version":3,"sources":["logo.svg","Action.js","Display.js","Numerator.js","Operator.js","Unary.js","App.js","Calculator.js","reportWebVitals.js","index.js"],"names":["Action","props","type","context","disabled","display","onClick","action","className","getClass","Display","upper","lower","Numerator","putNumber","Operator","putOperator","Unary","putUnary","calculator","updater","this","_res","_op","_opType","_input","_ans","_msg","_update","upd","Number","isFinite","resultToString","parseFloat","hasResult","noResult","toString","noInput","noOperator","parseNum","updateDisplay","clearOp","message","clear","input","slice","num","hasOperator","includes","changeSign","calculate","a","b","arg","res","isInput","hasInput","Math","sqrt","replace","actType","takeNumber","operationLine","disableDEL","disableANS","App","useState","setDisplay","setUpdater","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.01956fb2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","function Action(props) {\r\n    const {type, context} = props;\r\n    const disabled = typeof props.display[\"disable\"+type] !== \"undefined\";\r\n    const getClass = (type) => {\r\n        switch (type) {\r\n            case \"AC\" : return \"span-2\" \r\n            case \"=\" : \r\n            default : return \"\";\r\n        }\r\n    }\r\n\r\n    return <button onClick={() => context.action(type)} className={`action ${getClass(type)}`} disabled={disabled}>{type}</button>\r\n}\r\n\r\nexport default Action;","function Display({upper, lower}) {\r\n    return (\r\n        <div className=\"state\">\r\n            <p className=\"current-op\">{upper}</p>\r\n            <p className=\"current-num\">{lower}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Display;","function Numerator({type, context}) {\r\n    return <button className=\"number\" onClick={() => context.putNumber(type)}>{type}</button>\r\n}\r\n\r\nexport default Numerator;","function Operator({type, context}) {\r\n    return <button className=\"operator\" onClick={() => context.putOperator(type)}>{type}</button>\r\n}\r\n\r\nexport default Operator;","function Unary({type, context}) {\r\n    return <button className=\"unary operator\" onClick={() => context.putUnary(type)}>{type}</button>\r\n}\r\n\r\nexport default Unary;","import logo from './logo.svg';\nimport './App.css';\nimport Action from \"./Action\";\nimport Calculator from './Calculator';\nimport Display from './Display';\nimport Numerator from './Numerator';\nimport Operator from './Operator';\nimport Unary from './Unary';\nimport {useState} from \"react\";\n\nvar calculator = new Calculator();\n\nfunction App() {\n  const [display, setDisplay] = useState({upper:\"\", lower:\"\", disableANS:true, disableDEL:true});\n  calculator.setUpdater(setDisplay);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Display upper={display.upper} lower={display.lower}/>\n        <Action type=\"AC\" context={calculator} display={display} />\n        <Action type=\"DEL\" context={calculator} display={display} />\n        <Action type=\"ANS\" context={calculator} display={display} />\n        <Unary type=\"1/x\" context={calculator} />\n        <Unary type=\"x²\" context={calculator} />\n        <Unary type=\"√x\" context={calculator} />\n        <Operator type=\"÷\" context={calculator} />\n        <Numerator type=\"7\" context={calculator} />\n        <Numerator type=\"8\" context={calculator} />\n        <Numerator type=\"9\" context={calculator} />\n        <Operator type=\"×\" context={calculator} />\n        <Numerator type=\"4\" context={calculator} />\n        <Numerator type=\"5\" context={calculator} />\n        <Numerator type=\"6\" context={calculator} />\n        <Operator type=\"+\" context={calculator} />\n        <Numerator type=\"1\" context={calculator} />\n        <Numerator type=\"2\" context={calculator} />\n        <Numerator type=\"3\" context={calculator} />\n        <Operator type=\"-\" context={calculator} />\n        <Numerator type=\"±\" context={calculator} />\n        <Numerator type=\"0\" context={calculator} />\n        <Numerator type=\".\" context={calculator} />\n        <Action type=\"=\" context={calculator} display={display} />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","\r\nclass Calculator {\r\n    constructor(updater) {\r\n      this._res = \"\";//Number.NaN;\r\n      this._op = \"\";\r\n      this._opType = \"\";\r\n      this._input = \"\";\r\n      this._ans = \"\";\r\n      this._msg = \"\";\r\n      this._update = updater\r\n    }\r\n\r\n    print() {\r\n        return `In: ${this._input}, Op: ${this._opType}, Res: ${this._res}`\r\n    }\r\n\r\n    setUpdater(upd) { this._update = upd; }\r\n\r\n    hasResult() { return Number.isFinite(this._res); }\r\n    noResult() { return this._res === \"\"; } //NaN + INF are results\r\n    hasInput() { return this._input !== \"\"; }\r\n    noInput() { return this._input === \"\"; }\r\n    hasOperator() { return this._opType !== \"\"; }\r\n    noOperator() { return this._opType === \"\"; }\r\n  \r\n    get currentOp() { return this._opType; } \r\n    get result() { return this._res; }\r\n    get input() { return this._input; }\r\n    get operationLine() {\r\n        return `${this.resultToString()} ${this._opType}`;\r\n    }\r\n  \r\n    parseNum() {\r\n        return Number.parseFloat(this._input);\r\n    }\r\n\r\n    resultToString() {\r\n        if (this.hasResult() || this.noResult()) return this._res.toString();\r\n        else return \"ERROR\";\r\n    }\r\n  \r\n    calculate() {\r\n        if (this.noInput()) return;\r\n        if (this.noOperator()) {\r\n            this._res = this.parseNum();\r\n            this._input = \"\";\r\n            this._msg = \"\";\r\n            return;\r\n        }\r\n        this._res = this._op(this._res, this.parseNum());\r\n        if (this.hasResult()) {\r\n            this._input = \"\";\r\n            this._opType = \"=\";\r\n            this.updateDisplay();\r\n            this.clearOp();\r\n        } else {\r\n            let message = `ERROR ${this._res}`\r\n            this.clear();\r\n            this._msg = message;\r\n            this.updateDisplay();\r\n        }\r\n    }\r\n\r\n    changeSign() {\r\n        if (this.noInput()) this._input = \"-\";\r\n        else if (this.input[0] === \"-\") this._input = this.input.slice(1);\r\n        else this._input = \"-\" + this._input; \r\n    }\r\n  \r\n    putNumber(num) {\r\n        if (this.hasResult() && !this.hasOperator()) {\r\n            //clears the result without operator tied to the input\r\n            this._res = \"\";\r\n        }\r\n\r\n        switch (num) {\r\n            case \".\": if (this._input.includes(num)) return; break;\r\n            case \"±\": this.changeSign(); num=\"\"; break;\r\n            case \"0\": if (this.input === num) return; break;\r\n        }\r\n        this._input += num;\r\n        this.updateDisplay();\r\n    }\r\n\r\n    takeNumber() {\r\n        if (this.noInput()) {\r\n            if (this.hasOperator()) {\r\n                this.clearOp();\r\n                this.updateDisplay();\r\n            }\r\n            return;\r\n        }\r\n        this._input = this._input.slice(0, -1);\r\n        this.updateDisplay();\r\n    }\r\n  \r\n    putOperator(type) {\r\n        if (this.noInput()) { // if result exists, then start new operation\r\n            if (this.noResult()) return;\r\n            //return;\r\n        } else if (this.hasOperator() && this.hasResult()) {\r\n            this.calculate();\r\n            if (this.noResult()) return;\r\n        } else {\r\n            this._res = this.parseNum();\r\n        }\r\n        this._opType = type;\r\n        this._input = \"\";\r\n\r\n        switch (type) {\r\n            case \"+\" : this._op = (a, b) => a + b; break;\r\n            case \"-\" : this._op = (a, b) => a - b; break;\r\n            case \"×\" : this._op = (a, b) => a * b; break;\r\n            case \"÷\" : this._op = (a, b) => a / b; break;\r\n            default : this._op = (a, b) => a;\r\n        }\r\n        this.updateDisplay();\r\n    }\r\n\r\n    putUnary(type) {\r\n        let arg, res, isInput = this.hasInput();\r\n        if (!isInput) {\r\n            if (this.noResult() || this.hasOperator()) return; // must provide input\r\n            arg = this._res;\r\n        } else {\r\n            arg = this.parseNum();\r\n        }\r\n        switch (type) {\r\n            case \"√x\": res = Math.sqrt(arg); break;\r\n            case \"x²\": res = arg * arg; break;\r\n            case \"1/x\": res = 1/arg; break;\r\n            default: return;\r\n        }\r\n\r\n        if (!Number.isFinite(res)) {\r\n            // result is not an finite number\r\n            this._msg = `ERROR: ${type.replace(\"x\", arg)}`;\r\n            this._input = \"\";\r\n            res = arg;\r\n            this.updateDisplay();\r\n            return;\r\n        }\r\n\r\n        if (isInput && this.hasOperator()) {\r\n            this._input = res.toString();\r\n            this._msg = type.replace(\"x\", arg);\r\n            this.updateDisplay();\r\n            //this.calculate();\r\n        } else {\r\n            this._res = res;\r\n            this._msg = type.replace(\"x\", arg);\r\n            this._input = \"\";\r\n            this._opType = \"=\"\r\n            this.updateDisplay();\r\n            this.clearOp();\r\n        }\r\n    }\r\n\r\n    clearOp() { this._op = (a, b) => a; this._opType = \"\"; }\r\n\r\n    clear() {\r\n        this._input = \"\";\r\n        this.clearOp();\r\n        this._res = \"\";\r\n        //this._ans = \"\";\r\n        this._msg = \"\";\r\n        this.updateDisplay();\r\n    }\r\n    \r\n    action(actType) {\r\n        switch (actType) {\r\n            case \"AC\":\r\n                this.clear();\r\n                return;\r\n            case \"DEL\":\r\n                this.takeNumber();\r\n                return;\r\n            case \"ANS\":\r\n                if (this._ans === \"\") return;\r\n                this._input = this._ans.toString();\r\n                if (this.noOperator()) {\r\n                    this._res = \"\";\r\n                }\r\n                this._msg = actType;\r\n                this.updateDisplay();\r\n                return;\r\n            case \"=\":\r\n                this.calculate();\r\n                if (this.hasResult()) {\r\n                    this._ans = this._res;\r\n                    this._msg = \"ANS\";\r\n                    this.updateDisplay();\r\n                }\r\n                return;\r\n            default:\r\n                return;\r\n            }\r\n    }\r\n    \r\n    updateDisplay() {\r\n        // console.log(this.print());\r\n        let display={upper:this.operationLine, lower:`${this._msg!==\"\" ? `(${this._msg}) `: \"\"}${this.input}`};\r\n        if (this._msg !==\"\" || (this.noInput() && this.noOperator())) display.disableDEL = true;\r\n        if (!Number.isFinite(this._ans)) display.disableANS = true;\r\n        if (typeof this._update == \"undefined\" || this._update === \"\") return;\r\n        this._msg = \"\";\r\n        this._update(display);\r\n    }\r\n  }\r\n\r\n\r\nexport default Calculator;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}